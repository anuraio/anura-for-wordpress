name: Plugin Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php-compatibility:
    name: PHP Compatibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Compatibility Check
        run: composer check-compat

  unit-tests:
    name: Unit Tests (PHP ${{ matrix.php }} - WP Mock)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mysqli
          tools: composer
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPUnit tests
        run: composer test:unit

  integration-tests:
    name: Integration Tests (WP ${{ matrix.wordpress }} - PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2', '8.3']
        wordpress: ['5.3', '5.9', '6.0', '6.4', 'latest']
        exclude:
          # PHP 8.2 and 8.3 not compatible with WP 5.3-5.9
          - php: '8.2'
            wordpress: '5.3'
          - php: '8.2'
            wordpress: '5.9'
          - php: '8.3'
            wordpress: '5.3'
          - php: '8.3'
            wordpress: '5.9'
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mysqli, mbstring
          tools: composer
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install WordPress Test Suite
        run: |
          bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1:3306 ${{ matrix.wordpress }} true

      - name: Run integration tests
        run: ./vendor/bin/phpunit --configuration phpunit-integration.xml

  coding-standards:
    name: WordPress Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPCS
        run: composer phpcs
        continue-on-error: true  # Don't fail build on coding standards for now

  javascript-tests:
    name: JavaScript/TypeScript Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['front-end', 'anura-script']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: ./${{ matrix.project }}
        run: pnpm install --frozen-lockfile

      - name: Run linting
        working-directory: ./${{ matrix.project }}
        run: pnpm lint
        continue-on-error: true

      - name: Run tests
        working-directory: ./${{ matrix.project }}
        run: pnpm test
